{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlocalStorage.clear();\nconst initialProducts = JSON.parse(localStorage.getItem('logoBasketNumberHidden'));\nconst initialLikes = JSON.parse(localStorage.getItem('logoHeartNumberHidden'));\nconst initialButton = JSON.parse(localStorage.getItem('commercialBasket'));\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: initialProducts ? initialProducts : [],\n    likes: initialLikes ? initialLikes : [],\n    button: initialButton ? initialButton : []\n  },\n  reducers: {\n    addProducts: (prevState, action) => {\n      const newStateProduct = {\n        products: 1 - prevState.products,\n        likes: prevState.likes,\n        button: prevState.button\n      };\n      const dataProduct = JSON.stringify(newStateProduct);\n      localStorage.setItem(\"logoBasketNumberHidden\", dataProduct);\n      return newStateProduct;\n    },\n    addLikes: (prevState, action) => {\n      const newStateLikes = {\n        products: prevState.products,\n        likes: 1 - prevState.likes,\n        button: prevState.button\n      };\n      const dataLikes = JSON.stringify(newStateLikes);\n      localStorage.setItem(\"logoHeartNumberHidden\", dataLikes);\n      return newStateLikes;\n    },\n    buttonProduct: (prevState, action) => {\n      const newStateButton = {\n        products: prevState.products,\n        likes: prevState.likes,\n        button: 1 - prevState.button\n      };\n      const dataButton = JSON.stringify(newStateButton);\n      localStorage.setItem(\"commercialBasket\", dataButton);\n      return newStateButton;\n    }\n  }\n});\nexport const {\n  addProducts,\n  addLikes,\n  buttonProduct\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","localStorage","clear","initialProducts","JSON","parse","getItem","initialLikes","initialButton","cartSlice","name","initialState","products","likes","button","reducers","addProducts","prevState","action","newStateProduct","dataProduct","stringify","setItem","addLikes","newStateLikes","dataLikes","buttonProduct","newStateButton","dataButton","actions","reducer"],"sources":["F:/test/react-app/src/reducer/cart-reducer.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nlocalStorage.clear()\r\n\r\nconst initialProducts = JSON.parse( localStorage.getItem('logoBasketNumberHidden'));\r\nconst initialLikes = JSON.parse( localStorage.getItem('logoHeartNumberHidden'));\r\nconst initialButton = JSON.parse( localStorage.getItem('commercialBasket'));\r\n\r\n\r\n\r\nexport const cartSlice = createSlice ({\r\n    name: \"cart\",\r\n\r\n    initialState: { products: initialProducts ? initialProducts : [],\r\n                    likes: initialLikes ? initialLikes : [], \r\n                    button: initialButton ? initialButton : [] }, \r\n\r\n    reducers: {\r\n       \r\n        addProducts: (prevState, action) => {\r\n\r\n            const newStateProduct = {\r\n                    products: 1 - prevState.products,\r\n                    likes:  prevState.likes,\r\n                    button: prevState.button,                             \r\n                    }\r\n            const dataProduct = JSON.stringify(newStateProduct);         \r\n            localStorage.setItem(\"logoBasketNumberHidden\", dataProduct);\r\n            return newStateProduct;\r\n        },   \r\n\r\n        addLikes: (prevState, action) => {\r\n            const newStateLikes = {           \r\n                products: prevState.products,\r\n                likes: 1 - prevState.likes,\r\n                button:  prevState.button,\r\n            }\r\n            const dataLikes =  JSON.stringify(newStateLikes); \r\n            localStorage.setItem(\"logoHeartNumberHidden\", dataLikes);\r\n            return newStateLikes;  \r\n        },\r\n\r\n        buttonProduct: (prevState, action) =>{\r\n            const newStateButton = {           \r\n                products: prevState.products,\r\n                likes: prevState.likes,\r\n                button:  1 - prevState.button,\r\n            }\r\n            const dataButton =  JSON.stringify(newStateButton); \r\n            localStorage.setItem(\"commercialBasket\", dataButton);\r\n            return newStateButton;  \r\n        }\r\n    },\r\n});\r\n\r\nexport const { addProducts, addLikes, buttonProduct } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n\r\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5CC,YAAY,CAACC,KAAK,EAAE;AAEpB,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAAEJ,YAAY,CAACK,OAAO,CAAC,wBAAwB,CAAC,CAAC;AACnF,MAAMC,YAAY,GAAGH,IAAI,CAACC,KAAK,CAAEJ,YAAY,CAACK,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAC/E,MAAME,aAAa,GAAGJ,IAAI,CAACC,KAAK,CAAEJ,YAAY,CAACK,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAI3E,OAAO,MAAMG,SAAS,GAAGT,WAAW,CAAE;EAClCU,IAAI,EAAE,MAAM;EAEZC,YAAY,EAAE;IAAEC,QAAQ,EAAET,eAAe,GAAGA,eAAe,GAAG,EAAE;IAChDU,KAAK,EAAEN,YAAY,GAAGA,YAAY,GAAG,EAAE;IACvCO,MAAM,EAAEN,aAAa,GAAGA,aAAa,GAAG;EAAG,CAAC;EAE5DO,QAAQ,EAAE;IAENC,WAAW,EAAE,CAACC,SAAS,EAAEC,MAAM,KAAK;MAEhC,MAAMC,eAAe,GAAG;QAChBP,QAAQ,EAAE,CAAC,GAAGK,SAAS,CAACL,QAAQ;QAChCC,KAAK,EAAGI,SAAS,CAACJ,KAAK;QACvBC,MAAM,EAAEG,SAAS,CAACH;MAClB,CAAC;MACT,MAAMM,WAAW,GAAGhB,IAAI,CAACiB,SAAS,CAACF,eAAe,CAAC;MACnDlB,YAAY,CAACqB,OAAO,CAAC,wBAAwB,EAAEF,WAAW,CAAC;MAC3D,OAAOD,eAAe;IAC1B,CAAC;IAEDI,QAAQ,EAAE,CAACN,SAAS,EAAEC,MAAM,KAAK;MAC7B,MAAMM,aAAa,GAAG;QAClBZ,QAAQ,EAAEK,SAAS,CAACL,QAAQ;QAC5BC,KAAK,EAAE,CAAC,GAAGI,SAAS,CAACJ,KAAK;QAC1BC,MAAM,EAAGG,SAAS,CAACH;MACvB,CAAC;MACD,MAAMW,SAAS,GAAIrB,IAAI,CAACiB,SAAS,CAACG,aAAa,CAAC;MAChDvB,YAAY,CAACqB,OAAO,CAAC,uBAAuB,EAAEG,SAAS,CAAC;MACxD,OAAOD,aAAa;IACxB,CAAC;IAEDE,aAAa,EAAE,CAACT,SAAS,EAAEC,MAAM,KAAI;MACjC,MAAMS,cAAc,GAAG;QACnBf,QAAQ,EAAEK,SAAS,CAACL,QAAQ;QAC5BC,KAAK,EAAEI,SAAS,CAACJ,KAAK;QACtBC,MAAM,EAAG,CAAC,GAAGG,SAAS,CAACH;MAC3B,CAAC;MACD,MAAMc,UAAU,GAAIxB,IAAI,CAACiB,SAAS,CAACM,cAAc,CAAC;MAClD1B,YAAY,CAACqB,OAAO,CAAC,kBAAkB,EAAEM,UAAU,CAAC;MACpD,OAAOD,cAAc;IACzB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,WAAW;EAAEO,QAAQ;EAAEG;AAAc,CAAC,GAAGjB,SAAS,CAACoB,OAAO;AAEzE,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}